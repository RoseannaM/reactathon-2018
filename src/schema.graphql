type Query {
  ownedEvents: [Event!]!
  joinedEvents: [Event!]!
  event(id: ID!): Event
}

type Mutation {
  startEvent(id: ID!): Event
  endEvent(id: ID!): Event
  requestToStream(id: ID!): Request
  selectStream(sessionId: ID!, userId: ID!): Event
}

type Session {
  id: ID!
  accessToken: String
}

type Event {
  id: ID!
  title: String!
  startingTime: String!
  description: String!
  session: Session
  stream: ID
  requests: [Request!]
}

type Request {
  cameraSession: Session!
  screenSession: Session!
  user: User!
}

type User {
  id: ID!
}
